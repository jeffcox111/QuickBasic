'* QB/EVGFX declarations
DECLARE FUNCTION READDOT% (x0%, y0%)
DECLARE SUB DRAWDOT (mode%, value%, x0%, y0%)
DECLARE SUB DRAWCH (mode%, char%, x0%, y0%, fg%, bg%)
DECLARE SUB DRAWLN (mode%, value%, x0%, y0%, x1%, y1%)
DECLARE SUB DRAWLNP (mode%, pattern$, x0%, y0%, x1%, y1%)
DECLARE SUB DRAWLNS (mode%, value%, x1%, y1%)
DECLARE FUNCTION DRAWSTR% (mode%, strg$, x0%, y0%, fg%, bg%, gap%)
DECLARE SUB DRAWELL (mode%, value%, xC%, yC%, maj%, min%)
DECLARE SUB FILLSCN (lines%, value%)
DECLARE SUB FILLAREA (mode%, value%, borderval%, x%, y%)
DECLARE SUB FILLAREAP (mode%, pattern$, borderval%, x%, y%)
DECLARE SUB FLUDAREA (mode%, value%, x%, y%)
DECLARE SUB FLUDAREAP (mode%, pattern$, x%, y%)
DECLARE FUNCTION DIMBLOCK& (pmask%, x0%, y0%, x1%, y1%)
DECLARE SUB GETBLOCK (pmask%, x0%, y0%, x1%, y1%, vseg%, voff%)
DECLARE SUB PUTBLOCK (mode%, x0%, y0%, vseg%, voff%)
DECLARE FUNCTION EGAVIDEO% ()
DECLARE FUNCTION VGAVIDEO% ()
DECLARE FUNCTION COLORVIDEO% ()
DECLARE FUNCTION GETMODE% ()
DECLARE SUB SETMODE (mode%)
DECLARE SUB SETMODEX (regax%, regbx%)
DECLARE SUB SETPSA (onoff%)
DECLARE SUB GETPSA (pal17$)
DECLARE SUB SETSTEP (x0%, y0%)
DECLARE SUB GETSTEP (x0%, y0%)
DECLARE SUB SETPALREG (reg%, colorval%)
DECLARE SUB SETPALETTE (pal17$)
DECLARE SUB SETSCNBUFF (x1%, y1%)
DECLARE SUB WAITVS (cnt%)
DECLARE SUB BLANKSCN (onoff%)
DECLARE SUB BLINKBIT (onoff%)
DECLARE SUB FONTSYS08 ()
DECLARE SUB FONTSYS14 ()
DECLARE SUB FONTSYS16 ()
DECLARE SUB FONTSRF14P ()
DECLARE SUB USERFONT (vseg%, voff%, pts%)
'
'** window & 2-D routines QB/EVGFX2
DECLARE SUB SETWIN2D (vseg2%, voff2%)
DECLARE SUB GETWIN2D (vseg2%, voff2%)
DECLARE SUB SETSCNORG (x0%, y0%)
DECLARE FUNCTION DRAWSTRW% (mode%, strg$, x0%, y0%, fg%, bg%, gap%)
DECLARE SUB DRAWELLW (mode%, value%, xC%, yC%, maj%, min%)
DECLARE SUB FILLWIN (mode%, value%)
DECLARE SUB FILLWINP (mode%, pattern$)
DECLARE SUB XFORM2D (vseg2%, voff2%)
DECLARE FUNCTION CLIP2D% (vsegln2%, voffln2%)
'
'*** 3-D routines QB/EVGFX3
DECLARE SUB SETWIN3D (vseg3%, voff3%)
DECLARE SUB GETWIN3D (vseg3%, voff3%)
DECLARE SUB XFORM3D (vseg3%, voff3%)
DECLARE FUNCTION CLIP3D% (vsegln2%, voffln2%)
DECLARE SUB PROJORTHO (vseg3%, voff3%)
DECLARE SUB PROJPERS (vseg3%, voff3%)
'
'* misc routines
DECLARE FUNCTION GETBIT% (BYVAL CheckMe%, BYVAL BitPos%)
DECLARE FUNCTION SETBIT% (BYVAL UseMe%, BYVAL BitPos%)
DECLARE FUNCTION XORBIT% (BYVAL XorMe%, BYVAL BitPos%)

TYPE WINDOW2Dtype
x0 AS INTEGER
y0 AS INTEGER
x1 AS INTEGER
y1 AS INTEGER
END TYPE

TYPE POINT2Dtype
x0 AS INTEGER
y0 AS INTEGER
END TYPE

TYPE LINE2Dtype
x0 AS INTEGER
y0 AS INTEGER
x1 AS INTEGER
y1 AS INTEGER
END TYPE

TYPE PACK2Dtype
xtype2  AS INTEGER
deg2    AS INTEGER
orgX2   AS INTEGER
orgY2   AS INTEGER
transX2 AS INTEGER
transY2 AS INTEGER
scaleX2 AS INTEGER
scaleY2 AS INTEGER
points2 AS INTEGER
segXY2  AS INTEGER
offXY2  AS INTEGER
segXYp2 AS INTEGER
offXYp2 AS INTEGER
END TYPE

TYPE WINDOW3Dtype
x0 AS INTEGER
y0 AS INTEGER
z0 AS INTEGER
x1 AS INTEGER
y1 AS INTEGER
z1 AS INTEGER
END TYPE

TYPE POINT3Dtype
x0 AS INTEGER
y0 AS INTEGER
z0 AS INTEGER
END TYPE

TYPE LINE3Dtype
x0 AS INTEGER
y0 AS INTEGER
z0 AS INTEGER
x1 AS INTEGER
y1 AS INTEGER
z1 AS INTEGER
END TYPE

TYPE PACK3Dtype
xtype3  AS INTEGER
degH3   AS INTEGER
degP3   AS INTEGER
degB3   AS INTEGER
orgX3   AS INTEGER
orgY3   AS INTEGER
orgZ3   AS INTEGER
TransX3 AS INTEGER
TransY3 AS INTEGER
TransZ3 AS INTEGER
ScaleX3 AS INTEGER
ScaleY3 AS INTEGER
ScaleZ3 AS INTEGER
distV3  AS INTEGER
points3 AS INTEGER
segXY3  AS INTEGER
offXY3  AS INTEGER
segXYp3 AS INTEGER
offXYp3 AS INTEGER
segXYj3 AS INTEGER
offXYj3 AS INTEGER
END TYPE

